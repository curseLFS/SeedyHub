@page "/member"
@page "/member/{id:int}"
@inject IPeopleService PeopleService

@if (Id == null)
{
    <PageTitle>Register</PageTitle>
    <h3>Member Registeration</h3>
}
else
{
    <PageTitle>Edit</PageTitle>
    <h3>Edit @member.FirstName</h3>
}

<EditForm Model="member" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
       <InputText id="firstname" @bind-Value="member.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last Name</label>
       <InputText id="lastname" @bind-Value="member.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label>Role</label><br />
        <InputSelect @bind-Value="member.RoleId" class="form-select">
            @foreach (var role in PeopleService.roles)
           {
               <option value="@role.RoleId">@role.RoleName</option>
           }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteMember">Delete Member</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Members member = new Members { Role = new Role() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Register New Member" : "Update Member";
        await PeopleService.GetRoles();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            member.Role = PeopleService.roles[0];
            member.RoleId = member.Role.RoleId;
        }
        else
        {
            member = await PeopleService.GetSingleMember((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await PeopleService.MemberRegistration(member);
        }
        else
        {
            await PeopleService.UpdateMember(member);
        }
    }

    async Task DeleteMember()
    {
        await PeopleService.DeleteMember(member.MemberId);
    }
}
